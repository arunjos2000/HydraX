let RTMClient,SLACK_OAUTH_TOKEN,BOT_SPAM_CHANNEL,WebClient;_578‍.w("@slack/rtm-api",[["RTMClient",["RTMClient"],function(v){RTMClient=v}]]);_578‍.w("./constants",[["SLACK_OAUTH_TOKEN",["SLACK_OAUTH_TOKEN"],function(v){SLACK_OAUTH_TOKEN=v}],["BOT_SPAM_CHANNEL",["BOT_SPAM_CHANNEL"],function(v){BOT_SPAM_CHANNEL=v}]]);_578‍.w("@slack/web-api",[["WebClient",["WebClient"],function(v){WebClient=v}]]);


const packageJson = require('../package.json')

const rtm = new RTMClient(SLACK_OAUTH_TOKEN);
const web = new WebClient(SLACK_OAUTH_TOKEN);

rtm.start()
  .catch(_578‍.g.console.error);

rtm.on('ready', async () => {
    console.log('bot started')
    sendMessage(BOT_SPAM_CHANNEL, `Bot version ${packageJson.version} is online.`)
})

rtm.on('slack_event', async (eventType, event) => {
    if (event && event.type === 'message'){
        if (event.text === '!hello') {
            hello(event.channel, event.user)
        }
    }
})


function hello (channelId, userId) {
    sendMessage(channelId, `Heya! <@${userId}>`)
}

async function sendMessage(channel, message) {
    await web.chat.postMessage({
        channel: channel,
        text: message,
    })
}